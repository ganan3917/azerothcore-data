name: 自动打包并上传Release

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    name: 地图数据自动打包发布流程
    steps:
      - name: 📥 拉取代码仓库
        uses: actions/checkout@v4
        description: 从GitHub仓库拉取最新代码到运行环境

      - name: 🔧 生成唯一文件名
        id: set_filename
        run: |
          # 生成包含时间戳的文件名（格式：data+年月日时分秒）
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          echo "FILENAME=data${TIMESTAMP}.zip" >> $GITHUB_ENV
          echo "SPLIT_PREFIX=${{ env.FILENAME }}.part" >> $GITHUB_ENV
          echo "✅ 已生成文件名：${{ env.FILENAME }}"

      - name: 📦 打包地图数据文件
        run: |
          echo "开始打包文件，排除冗余目录..."
          # 打包核心数据并排除Git相关文件
          zip -r ${{ env.FILENAME }} . \
            -x ".git/*" \
            -x ".gitignore" \
            -x ".github/workflows/*" \
            -x "*.zip"
          # 显示打包结果和文件大小
          echo "✅ 打包完成！文件信息："
          ls -lh ${{ env.FILENAME }}

      - name: ✂️ 大文件自动分片处理
        run: |
          # 1.8GB = 1932735283字节（预留空间避免超过GitHub 2GB限制）
          MAX_SIZE=1932735283
          FILE_SIZE=$(stat -c%s "${{ env.FILENAME }}")
          
          echo "📏 检测文件大小：$((FILE_SIZE / 1024 / 1024))MB"
          
          if [ $FILE_SIZE -gt $MAX_SIZE ]; then
            echo "🔍 文件超过1.8GB，启动分片处理..."
            # 拆分为1.8GB/个的分片（数字后缀，如part00、part01）
            split -b 1800m -d -a 2 "${{ env.FILENAME }}" "${{ env.SPLIT_PREFIX }}"
            # 显示分片结果
            echo "✅ 分片完成，生成文件："
            ls -lh "${{ env.SPLIT_PREFIX }}"*
            # 删除原始大文件，避免上传受限
            rm -f "${{ env.FILENAME }}"
          else
            echo "✅ 文件大小符合要求，无需分片"
          fi

      - name: 🚀 上传文件到Release
        uses: softprops/action-gh-release@v2
        with:
          name: 自动打包-${{ env.FILENAME }}
          tag_name: ${{ env.FILENAME }}
          files: |
            ${{ env.SPLIT_PREFIX }}*
            ${{ env.FILENAME }}
          body: |
            ### AzerothCore Playerbot分支专用地图数据
            
            🌟 本资源包含运行AzerothCore Playerbot分支所需的完整地图数据，具体内容：
            - map：基础地图数据文件
            - mmap：导航网格数据（用于NPC路径计算）
            - dbc：客户端数据库文件（已集成中文优化）
            - vmap：可视地图碰撞数据
            - Cameras：视角配置文件
            - ✨ 特别优化：中文DBC文件解决机器人技能显示及执行异常问题
            
            ---
            
            📝 **下载与使用指南**
            1. **完整文件**（未分片）：
               - 直接下载 `.zip` 格式文件
               - 使用WinRAR、7-Zip或系统自带压缩工具解压即可
            
            2. **分片文件**（如显示为`dataxxx.zip.part00`等多个文件）：
               - **Windows系统合并方法**：
                 1. 将所有分片文件放在同一文件夹（确保文件名连续）
                 2. 打开「命令提示符」(CMD)，进入该文件夹
                 3. 执行命令：  
                    `copy /b dataxxx.zip.part* dataxxx.zip`  
                    （将`dataxxx`替换为实际文件名前缀）
               
               - **Linux/Mac系统合并方法**：
                 1. 将所有分片文件放在同一目录
                 2. 打开终端，进入该目录
                 3. 执行命令：  
                    `cat dataxxx.zip.part* > dataxxx.zip`  
                    （将`dataxxx`替换为实际文件名前缀）
               
               - 合并完成后，得到完整`.zip`文件，正常解压即可使用
            
            ---
            
            💡 提示：合并后的文件与原始文件校验一致，可放心用于服务器部署
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

      - name: 🧹 清理历史版本
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          keep_latest: 3  # 仅保留最新3个Release版本
          delete_tags: true  # 同时删除对应的Git标签
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
